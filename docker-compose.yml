name: 'isa'
services:

  client-dev:
    image: isa-client-dev
    profiles: [dev]
    ports:
      - "3000:3000"
    build:
      context: ../ISA-client
      dockerfile: Dockerfile.dev

  client-prod:
    image: isa-client-prod
    profiles: [prod]
    ports:
      - "3000:3000"
    build:
      context: ../ISA-client
      dockerfile: Dockerfile.prod

  server-dev:
    image: isa-server-dev
    profiles: [dev]
    restart: on-failure
    network_mode: "host"
    depends_on:
        postgres:
          condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PROFILE_ARG=dev

  server-prod:
    image: isa-server-prod
    profiles: [prod]
    restart: on-failure
    network_mode: "host"
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PROFILE_ARG=prod

  postgres:
    image: postgres:16
    restart: on-failure
    ports:
    - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=Praha4
      - POSTGRES_DB=gold_silver
      # solves problem of incompatible password hashing functions (related to pg_isready)
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - ../postgres_data_isa:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script
    healthcheck:
      # -U postgres solves problem with missing root user
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    external: false

#  sudo docker compose build/run/restart isa-client
#  sudo docker compose down
#  sudo docker compose up -d
#  sudo docker compose logs isa-server

#  sudo docker exec -it <container_id_or_name> psql -U <username> -d <database_name>
#  ALTER USER postgres PASSWORD 'prahapodoli';
